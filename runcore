#!/bin/bash

RUNCORE="${0##*/}"
GITROOT_DIR="$(git rev-parse --show-toplevel 2>/dev/null)"
RUNCORE_DIR="$GITROOT_DIR/.runcore"
RUNCORE_URL="http://github.com/creatiiv-io/runcore"

# display version
function version() {
  [ ! -d "$RUNCORE_DIR/.git" ] && echo "v1.2-cli" && return

  # git tag
  git_tag=$(cd $RUNCORE_DIR; git describe --tags --exact-match 2>/dev/null)

  # show git version
  [ $? -eq 0 ] && echo "$current_tag" || echo "v?.?-rouge-$(cd $RUNCORE_DIR; git rev-parse --short HEAD)"
}

# display tutorial
function tutorial() {
  xdg-open https://runcore.dev/tutorial
}

# find extension actions
function extensions() {
  [ -d "$RUNCORE_DIR/scripts" ] && for extscript in $RUNCORE_DIR/scripts/runcore-*.sh; do
      $extscript $@
  done
}

# initialize repo
function init() {
  [ -d "$RUNCORE_DIR" ] && echo "already initialized" && exit 1
  # if we are in the runcore repo show error

  # Check if we are not in a Git repository
  if [ -z "$GITROOT_DIR" ]; then
    read -p "You are not in a Git repository. Do you want to initialize one? (Y/n): " init_git
    init_git=${init_git:-Y}  # Default to "Y" if no input is given
    if [ "$init_git" = "y" ] || [ "$init_git" = "Y" ]; then
      git init
      GITROOT_DIR=.
      RUNCORE_DIR=./.runcore
    else
      echo "Initialization aborted."
      exit 1
    fi
  fi

  local is_runcore="$(grep "RUNCORE_DIR" $GITROOT_DIR/runcore 2>/dev/null)"

  [ -n "$is_runcore" ] && echo "cannot initialize in its own source directory" && exit 1

  #install runcore
  (cd "$GITROOT_DIR"; git submodule add "$RUNCORE_URL" .runcore)

  # notify of success
  echo "CONGRADULATIONS! - You have Runcore!"
  echo ""

  extensions init
  
  echo ""
  echo "Don't forget to commit your changes to git"
}

# delegate to extensions
function delegate() {
  [ -f "$RUNCORE_DIR/runcore-$1.sh" ] &&  exec $RUNCORE_DIR/runcore-"$1".sh $@

  help $@
}

# display help
function help() {
  case $1 in
    init)
      echo "initialize the current directory or one passed with runcore"
      ;;
    version)
      echo "version number will either show the base CLI version or the specific version of runcore for your directory"
      ;;
    tutorial)
      echo "learn all the features in a step by step totorial"
      ;;
    *)
      # if we have an extension script run it 
      [ -f "$RUNCORE_DIR/scripts/runcore-$2.sh" ] && exec $RUNCORE_DIR/scripts/runcore-$2.sh $@

      # show the defualt help menu
      echo "runcore $(version) - cli for developers"
      echo "Copyright 2024 - Creatiiv Artists LLC"
      echo "Some rights reserved. Apache-2.0 License"
      echo ""
      echo "  You can run the following commands:"
      echo ""
      echo "  $RUNCORE init"
      echo "  $RUNCORE version"
      echo "  $RUNCORE help"
      echo "  $RUNCORE tutorial"
 
      # add extension scripts help
      extensions $@

      echo ""
      echo "  If you need help on any command just prepend help:"
      echo ""
      echo "  $RUNCORE help [command]"
      ;;
  esac
}

# switch for base version
case $1 in
  version) version;;
  init) init $2;;
  tutorial) tutorial $@;;
  help) help ${@:2};;
  *) delegate $@;;
esac
