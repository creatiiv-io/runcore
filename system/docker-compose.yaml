name: "${CORE_RUNNAME}"
services:
#  auth:
#    image: nhost/hasura-auth:0.31.0
#    profiles:
#      - experimental
#    restart: always
#    depends_on:
#      hasura:
#        condition: service_healthy
#    environment:
#      AUTH_ACCESS_CONTROL_ALLOWED_EMAIL_DOMAINS: ""
#      AUTH_ACCESS_CONTROL_ALLOWED_EMAILS: ""
#      AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS: ""
#      AUTH_ACCESS_CONTROL_BLOCKED_EMAIL_DOMAINS: ""
#      AUTH_ACCESS_CONTROL_BLOCKED_EMAILS: ""
#      AUTH_ACCESS_TOKEN_EXPIRES_IN: "${JWTAUTH_TOKENEXPIRES}"
#      AUTH_ANONYMOUS_USERS_ENABLED: "false"
#      AUTH_API_PREFIX: "/v1/auth"
#      AUTH_CLIENT_URL: "http://localhost/login"
#      AUTH_DISABLE_NEW_USERS: "${JWTAUTH_DISABLENEWUSERS}"
#      AUTH_DISABLE_SIGNUP: "${JWTAUTH_DISABLESIGNUPS}"
#      AUTH_EMAIL_PASSWORDLESS_ENABLED: "${JWTAUTH_ENABLEPASSWORDLESS}"
#      AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED: "${JWTAUTH_ENABLEVERIFYEMAIL}"
#      AUTH_GRAVATAR_DEFAULT: "${JWTAUTH_GRAVITARDEFAULT}"
#      AUTH_GRAVATAR_ENABLED: "${JWTAUTH_GRAVITARENABLED}"
#      AUTH_GRAVATAR_RATING: "${JWTAUTH_GRAVITARRATING}"
#      AUTH_JWT_CUSTOM_CLAIMS: '{}'
#      AUTH_LOCALE_ALLOWED_LOCALES: "en"
#      AUTH_LOCALE_DEFAULT: "${JWTAUTH_DEFAULTLANGUAGE}"
#      AUTH_MFA_ENABLED: "${JWTAUTH_ENABLEMULTIFACTOR}"
#      AUTH_MFA_TOTP_ISSUER: ""
#      AUTH_PASSWORD_HIBP_ENABLED: "false"
#      AUTH_PASSWORD_MIN_LENGTH: "${JWTAUTH_PASSWORDLENGTH}"
#      AUTH_REFRESH_TOKEN_EXPIRES_IN: "2592000"
#      AUTH_REQUIRE_ELEVATED_CLAIM: "disabled"
#      AUTH_SERVER_URL: "http://${CADDY_DOMAIN}/v1/auth"
#      AUTH_SMTP_AUTH_METHOD: "${JWTAUTH_SMTPAUTH}"
#      AUTH_SMTP_HOST: "${JWTAUTH_SMTPHOST}"
#      AUTH_SMTP_PASS: "${JWTAUTH_SMTPPASS}"
#      AUTH_SMTP_PORT: "${JWTAUTH_SMTPPORT}"
#      AUTH_SMTP_SECURE: "false"
#      AUTH_SMTP_SENDER: "${JWTAUTH_SMTPFROM}"
#      AUTH_SMTP_USER: "${JWTAUTH_SMTPUSER}"
#      AUTH_USER_DEFAULT_ALLOWED_ROLES: "client,public"
#      AUTH_USER_DEFAULT_ROLE: "client"
#      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_ADMINSECRET}"
#      HASURA_GRAPHQL_DATABASE_URL: "postgres://${JWTAUTH_DBUSERNAME}:${JWTAUTH_DBPASSWORD}@postgres:5432/runcore"
#      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://${HASURA_DBUSERNAME}:${HASURA_DBPASSWORD}@postgres:5432/runcore"
#      HASURA_GRAPHQL_GRAPHQL_URL: "http://hasura:8080/v1/graphql"
#      HASURA_GRAPHQL_JWT_SECRET: '{"key":"${HASURA_JWTSECRET}","type":"HS256"}'
#      POSTGRES_MIGRATIONS_CONNECTION: "postgres://${JWTAUTH_DBUSERNAME}:${JWTAUTH_DBPASSWORD}@postgres:5432/runcore"
  caddy:
    image: caddy:2.8.4-alpine
    profiles:
      - development
      - production
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ${CORE_PUBLIC}:/usr/share/caddy/:ro
      - ${CORE_SYSTEM}:/etc/caddy/:ro
      - caddy_certs:/data
      - caddy_config:/config
    working_dir: /etc/caddy
  postgres:
    image: postgres:16-alpine
    profiles:
      - development
      - production
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ${CORE_SYSTEM}/pg_scripts/:/usr/local/sbin/:ro
      - ${CORE_SYSTEM}/init:/initfiles:ro
      - ${CORE_CONFIG}/config:/datafiles:ro
      - postgres_data:/var/lib/postgresql/data
    entrypoint: pg_start
    environment:
      POSTGRES_DB: runcore
      POSTGRES_USER: ${POSTGRES_DBUSERNAME:-runcore}
      POSTGRES_PASSWORD: ${POSTGRES_DBPASSWORD:-development}
      RUNCORE_ADMIN_USER: ${POSTGRES_DBUSERNAME:-runcore}
      RUNCORE_ADMIN_PASSWORD: ${POSTGRES_DBPASSWORD:-development}
      RUNCORE_AUTH_USER: ${JWTAUTH_DBUSERNAME}
      RUNCORE_AUTH_PASSWORD: ${JWTAUTH_DBPASSWORD}
      RUNCORE_AUTH_ANNONYMOUS: ${JWTAUTH_ANNONYMOUS}
      RUNCORE_AUTH_DBPASSWORD: ${JWTAUTH_DBPASSWORD}
      RUNCORE_AUTH_DBUSERNAME: ${JWTAUTH_DBUSERNAME}
      RUNCORE_AUTH_DEFAULTLANGUAGE: ${JWTAUTH_DEFAULTLANGUAGE}
      RUNCORE_AUTH_DEFAULTROLES: ${JWTAUTH_DEFAULTROLES}
      RUNCORE_AUTH_EMAILPASSWORD: ${JWTAUTH_EMAILPASSWORD}
      RUNCORE_AUTH_JWTSECRET: ${HASURA_JWTSECRET}
      RUNCORE_AUTH_PASSWORDLENGTH: ${JWTAUTH_PASSWORDLENGTH}
      RUNCORE_AUTH_PASSWORDEXIRES: ${JWTAUTH_PASSWORDEXPIRES}
      RUNCORE_AUTH_SENDMAGICLINK: ${JWTAUTH_SENDMAGICLINK}
      RUNCORE_AUTH_TOKENEXPIRES: ${JWTAUTH_TOKENEXPIRES}
      RUNCORE_AUTH_MFAENABLED: ${JWTAUTH_MFAENABLED}
      RUNCORE_AUTH_MFAMETHODS: ${JWTAUTH_MFAMETHODS}
      RUNCORE_AUTH_VIRALREQUIRED: ${JWTAUTH_VIRALREQUIRED}
      RUNCORE_AUTH_VIRALSHARES: ${JWTAUTH_VIRALSHARES}
      RUNCORE_AUTH_VERIFYCALL: ${JWTAUTH_VERIFYCALL}
      RUNCORE_AUTH_VERIFYEMAIL: ${JWTAUTH_VERIFYEMAIL}
      RUNCORE_AUTH_VERIFYTEXT: ${JWTAUTH_VERIFYTEXT}
      RUNCORE_HASURA_USER: ${HASURA_DBUSERNAME}
      RUNCORE_HASURA_PASSWORD: ${HASURA_DBPASSWORD}
      RUNCORE_PGBOUNCER_USER: ${PGBOUNCER_DBUSER:-pgbouncer}
      RUNCORE_PGBOUNCER_PASSWORD: ${PGBOUNCER_DBPASSWORD:-pgbouncer}
    healthcheck:
      test:
        - CMD-SHELL
#- pg_isready -U ${POSTGRES_DBUSERNAME:-runcore} -d appcore -q
        - timeout 1s bash -c ':> /dev/tcp/127.0.0.1/5432' || exit 1
      timeout: 60s
      interval: 5s
      start_period: 20s
  hasura:
    image: hasura/graphql-engine:v2.41.0-ce.cli-migrations-v3.ubi
    profiles:
      - development
      - production
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${CORE_CONFIG}/migrations:/hasura/migrations
      - ${CORE_CONFIG}/metadata:/hasura/metadata
      - ${CORE_CONFIG}/seeds:/hasura/seeds
    working_dir: /hasura
    environment:
      HASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_ADMINSECRET}"
      HASURA_GRAPHQL_CONNECTION_COMPRESSION: "true"
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: "/srv/console-assets"
      HASURA_GRAPHQL_CORS_DOMAIN: "${HASURA_CORSDOMAIN}"
      HASURA_GRAPHQL_DEV_MODE: "${HASURA_ENABLEDEVMODE}"
      HASURA_GRAPHQL_DISABLE_CORS: "${HASURA_CORSDISABLED}"
      HASURA_GRAPHQL_ENABLE_ALLOWLIST: "${HASURA_USEALLOWLIST}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLE_QUERY_TRACING: "true"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_ENABLED_APIS: "${HASURA_ENABLEAPIS}"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "${HASURA_LOGTYPE}"
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "${HASURA_EXTRAFEATURES}"
      HASURA_GRAPHQL_DATABASE_URL: "postgres://${HASURA_DBUSERNAME}:${HASURA_DBPASSWORD}@postgres:5432/runcore"
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: "hasura-default"
      HASURA_GRAPHQL_GRACEFUL_SHUTDOWN_TIMEOUT: "15"
      HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS: "false"
      HASURA_GRAPHQL_JWT_SECRET: '{"key":"${HASURA_JWTSECRET}","type":"HS256"}'
      HASURA_GRAPHQL_MAX_CACHE_SIZE: 100
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://${HASURA_DBUSERNAME}:${HASURA_DBPASSWORD}@postgres:5432/runcore"
      HASURA_GRAPHQL_METADATA_DIR: "/hasura/metadata"
      HASURA_GRAPHQL_MIGRATION_DIR: "/hasura/migrations"
      HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE: "${HASURA_EVENTPOOLSIZE}"
      HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL: "${HASURA_LIVEREFRESH}"
      HASURA_GRAPHQL_LOG_LEVEL: "${HASURA_LOGLEVEL}"
      HASURA_GRAPHQL_PG_CONNECTIONS: "${HASURA_DBCONNECTIONS}"
      HASURA_GRAPHQL_PG_TIMEOUT: "${HASURA_DBTIMEOUT}"
      HASURA_GRAPHQL_SHOW_UPDATE_NOTIFICATION: "false"
      HASURA_GRAPHQL_SERVER_PORT: "8080"
      HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: "${HASURA_NUMBERSTRING}"
      HASURA_GRAPHQL_TX_ISOLATION: "${HASURA_TRANSLATIONMODE}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      HASURA_GRAPHQL_USE_PREPARED_STATEMENTS: "${HASURA_USEPREPAREDSTATEMENTS}"
      RUNCORE_CONSOLE_DOMAIN: "${CADDY_DOMAIN}"
    healthcheck:
      test:
        - CMD-SHELL
# curl http://localhost:8080/healthz > /dev/null 2>&1
        - timeout 1s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      timeout: 60s
      interval: 5s
      start_period: 60s
    networks:
      default:
        aliases:
          - ${CADDY_DOMAIN}
volumes:
  postgres_data: {}
  caddy_certs: {}
  caddy_config: {}
