services:
  postgres:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: appcore
      POSTGRES_USER: appcore
      POSTGRES_PASSWORD: letmeinalready
  graphql:
    image: hasura/graphql-engine:v2.40.2-ce.ubi
    ports:
      - "8080:8080"
    restart: always
    environment:
      APPCORE_DATABASE_URL: postgres://appcore:letmeinalready@postgres:5432/appcore
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://appcore:letmeinalready@postgres:5432/appcore
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      HASURA_GRAPHQL_ADMIN_SECRET: letmeinalready
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://connectors:8081/api/v1/athena"},"mariadb":{"uri":"http://connectors:8081/api/v1/mariadb"},"mysql8":{"uri":"http://connectors:8081/api/v1/mysql"},"oracle":{"uri":"http://connectors:8081/api/v1/oracle"},"snowflake":{"uri":"http://connectors:8081/api/v1/snowflake"}}}}'
    depends_on:
      connectors:
        condition: service_healthy
  connectors:
    image: hasura/graphql-data-connector:v2.40.2
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  postgres-data: {}
